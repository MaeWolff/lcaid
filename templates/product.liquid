{% assign current_variant = product.selected_or_first_available_variant %}
{% assign featured_image = current_variant.featured_image | default: product.featured_image %}

<div class="relative mt-[calc(var(--header-height)_+_1rem)] grid w-full grid-cols-1 gap-4 margin-px-1 lg:grid-cols-[1fr_0.7fr] lg:gap-16">
  <section id="product-images" class="relative grid grid-cols-1">
    <div
      id="sticky-text"
      class="fixed bottom-10 left-1/4 -translate-x-1/4 bg-white p-4 opacity-100 shadow-lg transition-opacity duration-300"
    >
      Complete the look
    </div>

    <img
      class="aspect-square h-full w-full bg-neutral-light-grey object-cover object-top"
      src="{{ product.images[0]  | image_url }}"
      alt="{{ featured_image.alt | escape }}"
      width="100%"
      height="100%"
    >
    <img
      class="aspect-square h-full w-full bg-neutral-light-grey object-cover object-top"
      src="{{ product.images[1]  | image_url }}"
      alt="{{ featured_image.alt | escape }}"
      width="100%"
      height="100%"
    >

    {% if product.images[2] %}
      <img
        class="aspect-square h-full w-full bg-neutral-light-grey object-cover object-top"
        src="{{ product.images[2]  | image_url }}"
        alt="{{ featured_image.alt | escape }}"
        width="100%"
        height="100%"
      >
    {% endif %}
  </section>

  <section class="sticky top-[var(--header-height)] flex h-max flex-col gap-8">
    {% render 'product-page-details' %}
    {% render 'product-page-accordions' %}
  </section>
</div>

{% render 'product-page-complete-the-look' %}

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const section = document.getElementById('product-images');
    const text = document.getElementById('sticky-text');

    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          text.classList.add('block'); // Affiche le texte
        } else {
          text.classList.remove('block'); // Cache le texte
        }
      },
      { root: null, threshold: 0.1 }, // DÃ©clenche quand 10% de la section est visible
    );

    observer.observe(section);
  });
</script>
