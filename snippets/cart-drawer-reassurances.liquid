<div
  x-data="createCarousel()"
  x-init="init()"
  class="relative h-[112px] w-full overflow-x-hidden"
>
  <div
    class="flex transition-transform duration-300"
    :style="{ transform: `translateX(-${activeIndex * 100}%)` }"
  >
    <div class="flex w-full flex-shrink-0 flex-col gap-1 py-4 text-center text-xs">
      <p>{{ settings.reassurance_text_1 }}</p>
    </div>
    <div class="flex w-full flex-shrink-0 flex-col gap-1 py-4 text-center text-xs">
      <p>{{ settings.reassurance_text_2 }}</p>
    </div>
    <div class="flex w-full flex-shrink-0 flex-col gap-1 py-4 text-center text-xs">
      <p>{{ settings.reassurance_text_3 }}</p>
    </div>
  </div>

  <div class="mx-auto flex w-full justify-center space-x-1">
    <template x-for="(slide, index) in slides" :key="index">
      <button
        @click="goTo(index)"
        class="h-[6px] w-[6px] rounded-full"
        :class="index === activeIndex ? 'bg-neutral-mid-grey' : 'bg-neutral-light-grey'"
      ></button>
    </template>
  </div>
</div>

<script>
  function createCarousel() {
    return {
      slides: [0, 1, 2],
      activeIndex: 0,
      interval: null,

      init() {
        this.startCarousel(5000);
      },

      startCarousel(interval) {
        this.interval = setInterval(() => {
          this.nextSlide();
        }, interval);
      },

      stopCarousel() {
        clearInterval(this.interval);
      },

      nextSlide() {
        this.activeIndex = (this.activeIndex + 1) % this.slides.length;
      },

      goTo(index) {
        this.activeIndex = index;
        this.stopCarousel();
        this.startCarousel(3000);
      },
    };
  }
</script>
